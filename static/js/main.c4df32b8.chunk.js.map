{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","components/Login.js","components/Credits.js","components/Debits.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","Number","this","props","accountBalance","toFixed","Component","Home","src","alt","to","UserProfile","userName","memberSince","LogIn","handleChange","e","updatedUser","state","user","target","value","setState","handleSubmit","preventDefault","mockLogIn","redirect","password","onSubmit","type","name","defaultValue","onChange","Credits","credits","map","credit","date","slice","amount","description","id","elements","now","Date","tzOffset","getTimezoneOffset","getTime","toISOString","newBalance","parseInt","updateAccountBalance","addCredit","length","placeholder","step","Debits","debits","debit","addDebit","App","logInInfo","newUser","currentUser","debitList","creditList","debitSum","creditSum","a","axios","get","response","data","item","sum","reduce","acc","apiCallCredit","apiCallDebit","basename","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4df32b8.chunk.js","sourcesContent":["/*==================================================\r\nsrc/components/AccountBalance.js\r\n\r\nThe AccountBalance component displays account balance. It is included in other page views.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\n\r\nclass AccountBalance extends Component {\r\n\r\n  // Display account balance\r\n  render() {\r\n    return (\r\n      <div>\r\n        Balance: {Number(this.props.accountBalance).toFixed(2)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountBalance;","/*==================================================\r\nsrc/components/Home.js\r\n\r\nThe Home component is used to demonstrate the use of Link.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport AccountBalance from './AccountBalance';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <img src=\"https://picsum.photos/200/200\" alt=\"bank\"/>\r\n\r\n        <h1>Bank of React</h1>\r\n\r\n        <Link to=\"/userProfile\">User Profile</Link>\r\n        <br/>\r\n        <Link to=\"/login\">Login</Link>\r\n        <br/>\r\n        <Link to=\"/credits\">Credits</Link>\r\n        <br/>\r\n        <Link to=\"/debits\">Debits</Link>\r\n        <br/><br/>\r\n        <AccountBalance accountBalance={this.props.accountBalance}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","/*==================================================\r\nsrc/components/UserProfile.js\r\n\r\nThe UserProfile component is used to demonstrate the use of Route and Link.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass UserProfile extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>User Profile</h1>\r\n\r\n        <div>Username: {this.props.userName}</div>\r\n        <div>Member Since: {this.props.memberSince}</div>\r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;","/*==================================================\r\nsrc/components/Login.js\r\n\r\nThe LogIn component is used to demonstrate the use of Redirect.\r\nNote: You don't need to work on this file for the Assignment.\r\n==================================================*/\r\nimport React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass LogIn extends Component {\r\n  constructor (props) {  // Create and initialize state\r\n    super(props)\r\n    this.state = {\r\n      user: {\r\n        //userName: '',\r\n        userName: this.props.user.userName,  // Initialize userName using props input (currentUser in App.js)\r\n        password: ''\r\n      },\r\n      redirect: false  // Redirect property used to trigger Redirect\r\n    }\r\n  }\r\n\r\n  // When User Name input is changed, capture the new input value and update state\r\n  handleChange = (e) => {\r\n    const updatedUser = {...this.state.user};  // Create an object for state\r\n    updatedUser.userName = e.target.value;  // Set object's userName to the new input value\r\n    this.setState({user: updatedUser})  // Update state with object values\r\n  }\r\n\r\n  // When user clicked \"Log In\" button, store user data and then redirect to \"User Profile\" page\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    this.props.mockLogIn(this.state.user)  // Update state in the top-level component (App.js)\r\n    this.setState({redirect: true})  // Update state to trigger Redirect\r\n  }\r\n  \r\n  render () {\r\n    // Redirect to \"User Profile\" page when \"Log In\" button is clicked\r\n    if (this.state.redirect) {  \r\n      return (<Redirect to=\"/userProfile\"/>);\r\n    }\r\n\r\n    // Render the login form (and call \"handleSubmit\" method when \"Log In\" button is clicked to submit form)\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n          <div>\r\n            <label>User Name</label>\r\n            <input type=\"text\" name=\"userName\" defaultValue={this.props.user.userName} onChange={this.handleChange} />\r\n          </div>\r\n          <div>\r\n            <label>Password</label>\r\n            <input type=\"password\" name=\"password\" />\r\n          </div>\r\n          <button>Log In</button>\r\n        </form>  \r\n        <br/>\r\n        <Link to=\"/\">Return to Home</Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LogIn;","/*==================================================\r\nsrc/components/Credits.js\r\n\r\nThe Credits component contains information for Credits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from \"react-router-dom\";\r\nimport AccountBalance from \"./AccountBalance\";\r\n\r\nconst Credits = (props) => {\r\n  let creditView = (credits) => {\r\n    return credits.map((credit) => {\r\n      let date = credit.date.slice(0, 10);\r\n      return (\r\n        <li key={credit.id}>\r\n          {Number(credit.amount).toFixed(2)} {credit.description} {date}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  function addCredit(e) {\r\n    e.preventDefault();\r\n\r\n    const description = e.target.elements.description.value;\r\n    const amount = e.target.elements.amount.value;\r\n    //const date = new Date().toISOString().slice(0, 10);\r\n    const now = new Date();\r\n    const tzOffset = now.getTimezoneOffset();\r\n    const date = new Date(now.getTime() - tzOffset * 60 * 1000)\r\n      .toISOString()\r\n      .slice(0, 10);\r\n\r\n    //console.log(new Date());\r\n\r\n    const newBalance = props.accountBalance + parseInt(amount);\r\n    props.updateAccountBalance(newBalance);\r\n\r\n    props.addCredit([\r\n      ...props.credits,\r\n      {\r\n        id: props.credits.length + 1,\r\n        description: description,\r\n        amount: amount,\r\n        date: date,\r\n      },\r\n    ]);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Credit</h1>\r\n      <AccountBalance accountBalance={props.accountBalance} />\r\n      <br></br>\r\n      {creditView(props.credits)}\r\n\r\n      <form onSubmit={(e) => addCredit(e)}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"Description\" />\r\n        <input type=\"number\" name=\"amount\" placeholder=\"Price\" step=\".01\" />\r\n        <button type=\"submit\">Add Credit</button>\r\n      </form>\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Credits;\r\n","/*==================================================\r\nsrc/components/Debits.js\r\n\r\nThe Debits component contains information for Debits page view.\r\nNote: You need to work on this file for the Assignment.\r\n==================================================*/\r\nimport { Link } from \"react-router-dom\";\r\nimport AccountBalance from \"./AccountBalance\";\r\n\r\nconst Debits = (props) => {\r\n  // Create the list of Debit items\r\n  let debitsView = (debits) => {\r\n    return debits.map((debit) => {\r\n      // Extract \"id\", \"amount\", \"description\" and \"date\" properties of each debits JSON array element\r\n      let date = debit.date.slice(0, 10);\r\n      return (\r\n        <li key={debit.id}>\r\n          {Number(debit.amount).toFixed(2)} {debit.description} {date}\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n\r\n  function addDebit(e) {\r\n    e.preventDefault();\r\n\r\n    const description = e.target.elements.description.value;\r\n    const amount = e.target.elements.amount.value;\r\n    //const date = new Date().toISOString().slice(0, 10);\r\n    const now = new Date();\r\n    const tzOffset = now.getTimezoneOffset();\r\n    const date = new Date(now.getTime() - tzOffset * 60 * 1000)\r\n      .toISOString()\r\n      .slice(0, 10);\r\n\r\n    //console.log(new Date());\r\n\r\n    const newBalance = props.accountBalance - amount;\r\n    props.updateAccountBalance(newBalance);\r\n\r\n    props.addDebit([\r\n      ...props.debits,\r\n      {\r\n        id: props.debits.length + 1,\r\n        description: description,\r\n        amount: amount,\r\n        date: date,\r\n      },\r\n    ]);\r\n  }\r\n  // Render the list of Debit items and a form to input new Debit item\r\n  return (\r\n    <div>\r\n      <h1>Debits</h1>\r\n      <AccountBalance accountBalance={props.accountBalance} />\r\n      <br></br>\r\n      {debitsView(props.debits)}\r\n\r\n      <form onSubmit={(e) => addDebit(e)}>\r\n        <input type=\"text\" name=\"description\" placeholder=\"Description\" />\r\n        <input type=\"number\" name=\"amount\" placeholder=\"Price\" step=\".01\" />\r\n        <button type=\"submit\">Add Debit</button>\r\n      </form>\r\n      <br />\r\n      <Link to=\"/\">Return to Home</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Debits;\r\n","/*==================================================\r\nsrc/App.js\r\n\r\nThis is the top-level component of the app.\r\nIt contains the top-level state.\r\n==================================================*/\r\nimport React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// Import other components\r\nimport Home from \"./components/Home\";\r\nimport UserProfile from \"./components/UserProfile\";\r\nimport LogIn from \"./components/Login\";\r\nimport Credits from \"./components/Credits\";\r\nimport Debits from \"./components/Debits\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    // Create and initialize state\r\n    super();\r\n    this.state = {\r\n      accountBalance: 0,\r\n      creditList: [],\r\n      debitList: [],\r\n      currentUser: {\r\n        userName: \"Joe Smith\",\r\n        memberSince: \"11/22/99\",\r\n      },\r\n      debitSum: 0,\r\n      creditSum: 0,\r\n    };\r\n  }\r\n  async apiCallDebit() {\r\n    let apiLink = \"https://johnnylaicode.github.io/api/debits.json\";\r\n    try {\r\n      let response = await axios.get(apiLink);\r\n      //console.log(response.data);\r\n      const data = response.data.map((item) => item.amount);\r\n      const sum = data.reduce((acc, amount) => acc + amount, 0);\r\n      this.setState({\r\n        debitList: response.data,\r\n        debitSum: sum,\r\n        accountBalance: this.state.accountBalance - sum,\r\n      });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        //console.log(error.response.data);\r\n        //console.log(error.response.status);\r\n      }\r\n    }\r\n  }\r\n\r\n  async apiCallCredit() {\r\n    let apiLink = \"https://johnnylaicode.github.io/api/credits.json\";\r\n    try {\r\n      let response = await axios.get(apiLink);\r\n      //console.log(response.data);\r\n      const data = response.data.map((item) => item.amount);\r\n      const sum = data.reduce((acc, amount) => acc + amount, 0);\r\n      this.setState({\r\n        creditList: response.data,\r\n        creditSum: sum,\r\n        accountBalance: this.state.accountBalance + sum,\r\n      });\r\n    } catch (error) {\r\n      if (error.response) {\r\n        //console.log(error.response.data);\r\n        //console.log(error.response.status);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.apiCallCredit();\r\n    this.apiCallDebit();\r\n  }\r\n\r\n  updateAccountBalance = (newBalance) => {\r\n    this.setState({ accountBalance: newBalance });\r\n  };\r\n\r\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\r\n  mockLogIn = (logInInfo) => {\r\n    const newUser = { ...this.state.currentUser };\r\n    newUser.userName = logInInfo.userName;\r\n    this.setState({ currentUser: newUser });\r\n  };\r\n\r\n  addDebit = (debit) => {\r\n    this.setState({ debitList: debit });\r\n  };\r\n  addCredit = (credit) => {\r\n    this.setState({ creditList: credit });\r\n  };\r\n\r\n  // Create Routes and React elements to be rendered using React components\r\n  render() {\r\n    // Create React elements and pass input props to components\r\n    const HomeComponent = () => (\r\n      <Home accountBalance={this.state.accountBalance} />\r\n    );\r\n    const UserProfileComponent = () => (\r\n      <UserProfile\r\n        userName={this.state.currentUser.userName}\r\n        memberSince={this.state.currentUser.memberSince}\r\n      />\r\n    );\r\n    const LogInComponent = () => (\r\n      <LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />\r\n    );\r\n    const CreditsComponent = () => (\r\n      <Credits\r\n        credits={this.state.creditList}\r\n        accountBalance={this.state.accountBalance}\r\n        updateAccountBalance={this.updateAccountBalance}\r\n        addCredit={this.addCredit}\r\n      />\r\n    );\r\n    const DebitsComponent = () => (\r\n      <Debits\r\n        debits={this.state.debitList}\r\n        accountBalance={this.state.accountBalance}\r\n        updateAccountBalance={this.updateAccountBalance}\r\n        addDebit={this.addDebit}\r\n      />\r\n    );\r\n\r\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\r\n    return (\r\n      <Router basename=\"/assignment-4\">\r\n        <div>\r\n          <Route exact path=\"/\" render={HomeComponent} />\r\n          <Route exact path=\"/userProfile\" render={UserProfileComponent} />\r\n          <Route exact path=\"/login\" render={LogInComponent} />\r\n          <Route exact path=\"/credits\" render={CreditsComponent} />\r\n          <Route exact path=\"/debits\" render={DebitsComponent} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","/*==================================================\r\nsrc/index.js\r\n\r\nThis file renders the top-level component App which contains all components of the app).\r\n==================================================*/\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n// Note: In above, StrictMode is a tool for highlighting potential problems in an application. \r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}